import { Box } from "@mui/material";
import { Inter } from "@next/font/google";
import { useTranslation } from "next-i18next";
import { serverSideTranslations } from "next-i18next/serverSideTranslations";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import Achievements from "../components/Achievements";
import Navbar from "../components/Navbar";
import { Footer } from "../footer/Footer";
import styles from "../styles/Home.module.css";

const inter = Inter({ subsets: [ "latin" ] });

export default function Home()
{
  const { t } = useTranslation("common");
  const [ isMenuOpen, setMenuOpen ] = useState(false);
  const [ header, setHeader ] = useState("headerColor");

  const closeMenu = () => setMenuOpen(false);
  const openMenu = () => setMenuOpen(true);

  const listenScrollEvent = (event) =>
  {
    const bgColorChanged = 373;

    if (window.scrollY < bgColorChanged)
    {
      return setHeader("headerColor");
    } else if (window.scrollY > bgColorChanged)
    {
      return setHeader("headerColor2");
    }
  };

  useEffect(() =>
  {
    window.addEventListener("scroll", listenScrollEvent);

    return () => window.removeEventListener("scroll", listenScrollEvent);
  }, []);

  const router = useRouter();
  const { locale } = router;

  const handelLanguageToggle = (newLocale) =>
  {
    const { pathname, asPath, query } = router;
    router.push({ pathname, query }, asPath, { locale: newLocale });
  };

  const changeTo = router.locale === "ru" ? "en" : "ru";


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box className={header}>
        <Navbar
          onMenuIconClick={openMenu}
          close={closeMenu}
          isOpen={isMenuOpen}
          // languageToggle={handelLanguageToggle}
          sx={{
            backdropFilter: "blur(8px)",
            // color: "black",
          }}
        />
      </Box>

      <Box component='main' className='main' >
        <div className={styles.grid}>
          <Link href="/portfolio" className={styles.card}>
            <h2 className={inter.className}>
              {t("portfolio")} <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              {t("portfolio_info")}
            </p>
          </Link>

          <Link href="/articles" className={styles.card}>
            <h2 className={inter.className}>
              {t("my_articles")} <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              {t("my_articles_info")}
            </p>
          </Link>

          <Link href="/questions" className={styles.card}>
            <h2 className={inter.className}>
              {t("questions")} <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              {t("questions_info")}
            </p>
          </Link>
          <Link href="/questions" className={styles.card}>
            <Box sx={{ width: "255px", margin: "auto" }}>
              <h2 className={inter.className} align="center">
                {t("achievements")} <span>-&gt;</span>
              </h2>
              <p className={inter.className}>
                {t("achievements_info")}
              </p>
            </Box>
          </Link>
        </div>

        <Achievements sx={{ mt: '0px' }} />
        <Footer sx={{
          backgroundColor: "rgba(0, 179, 152, 1)",
          marginLeft: '-6rem',
          marginRight: '-6rem',
          width: 'calc(100% + 12rem)'
        }} />
      </Box>
    </>
  );
}
export const getStaticProps = async ({ locale }) => ({
  props: {
    ...(await serverSideTranslations(locale, [ "common" ])),
  },
});
